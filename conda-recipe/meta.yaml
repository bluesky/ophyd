package:
  name: ophyd
  version: {{ environ['GIT_DESCRIBE_TAG'] }}.post{{ environ.get('GIT_DESCRIBE_NUMBER', 0) }}


source:
  git_url: ../
  # use a local url and leave rev blank to have conda build current head, currently
  # requires master branch of conda-build to work
  # git_rev: ?



build:
  number: 0
  string: {{ environ.get('GIT_BUILD_STR', '') }}_{{ py }}_np{{ np }}
  #preserve_egg_dir: True
  #entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pyepics = pyepics:main
    #
    # Would create an entry point called pyepics that calls pyepics.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
  run:
    - python
    - numpy
    - pyepics
    - prettytable
    - filestore
    - six
    - ipython
    - pyolog

test:
  # Python imports
  imports:
    - ophyd
    - ophyd.areadetector
    - ophyd.hkl
    - ophyd.utils

  #commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/NSLS-II/ophyd
  license: BSD

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
